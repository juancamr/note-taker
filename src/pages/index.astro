---
import Layout from "../layouts/Layout.astro";
import { getNotes } from "../data/note";
const notes = await getNotes();
---

<script>
import { encrypt, password } from "../utils/stringUtils.js";

document.addEventListener("keydown", async function (event) {
    if (event.key === "a") {
        const content = prompt("Enter the content");
        if (content == null) return;
        const title = prompt("Enter the title");
        if (title == null) return;
        fetch("/api/note/", {
            method: "post",
            body: JSON.stringify({ title, content }),
        })
            .then((res) => res.json())
            .then(() => {
                location.reload();
            });
    }
    if (event.ctrlKey && event.key === "d") {
        const passwordEncrypted = await encrypt(prompt("You are trying to delete all notes. Enter the password to continue"));
        if (passwordEncrypted === password) {
            console.log("Deleting all notes");
            fetch("/api/note/", {
                method: "delete",
            })
                .then((res) => res.json())
                .then(() => {
                    location.reload();
                });
        } else {
            alert("Incorrect password");
        }
    }
});
</script>

<script is:inline>
async function copy (event) {
    const content = event.target.getAttribute("data-content")
    const title = event.target.getAttribute("data-title")
    await navigator.clipboard.writeText(content);
    Toastify({
        text: `"${title}" copied!`,
        duration: 3000,
        gravity: "bottom", 
        position: "left", 
        style: { background: "#1F2937", borderRadius: "1rem"},
    }).showToast();
};
</script>

<Layout title="Note taker">
    <div class="grid grid-cols-2 lg:grid-cols-4 2xl:grid-cols-5 gap-6 mt-10">
        { notes.length === 0 ? (
            <div class="text-center col-span-full py-20">
                <h1 class="text-2xl text-black dark:text-white font-bold grape-nuts">There is not notes.</h1>
            </div>
        ) : notes.map(({ title, content }, index) => (
            <div
                id={`${index}`}
                class="product-font bg-white dark:bg-gray-800 p-4 text-black
                    dark:text-white rounded-xl transition duration-300 border
                    border-gray-100 dark:border-gray-800 shadow-lg"
            >
                <div class="flex mb-2 items-start">
                    <h4 class="font-bold text-xl mr-auto">{title}</h4>
                    <i onclick="copy(event)" data-title={title} data-content={content} class="fa-solid fa-copy cursor-pointer p-2"></i>
                </div>
                <p class="text-sm text-gray-500 dark:text-gray-400">{content.slice(0, 10)}...</p>
            </div>
        )) }
    </div>
</Layout>
